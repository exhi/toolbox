buildscript {
    repositories {
        mavenLocal()
        jcenter()
        maven {
            url 'https://repo.grails.org/grails/core'
        }
    }
    dependencies {
        classpath "org.grails:grails-gradle-plugin:$grailsVersion"
        classpath "org.grails.plugins:hibernate5:${gormVersion-".RELEASE"}"
    }
}


def appVersion = hasProperty('xhAppVersion') ? xhAppVersion : '1.0-SNAPSHOT',
    appBuild = hasProperty('xhAppBuild') ? xhAppBuild : 'UNKNOWN'

version appVersion
group 'io.xh'

apply plugin:'idea'
apply plugin:'war'
apply plugin:'org.grails.grails-web'
apply plugin:'org.grails.grails-gsp'

repositories {
    mavenLocal()
    jcenter()
    maven {
        url 'https://repo.grails.org/grails/core'
    }
    maven {
        url 'https://repo.xh.io/content/groups/public/'
        credentials {
            username xhRepoReadUser
            password xhRepoReadPassword
        }
    }
}

configurations.all {
    resolutionStrategy.cacheChangingModulesFor 0, 'seconds'
}

boolean inlineHoist = runHoistInline == 'true'
if (inlineHoist) {
    println "${appName}: running with Hoist Core INLINE...."
} else {
    println "${appName}: running with Hoist Core PACKAGED at v${hoistCoreVersion}...."
}

dependencies {
    compile "org.springframework.boot:spring-boot-starter-logging"
    compile "org.springframework.boot:spring-boot-autoconfigure"
    compile "org.grails:grails-core"
    compile "org.springframework.boot:spring-boot-starter-actuator"
    provided "org.springframework.boot:spring-boot-starter-tomcat"

    compile "org.grails:grails-web-boot"
    compile "org.grails:grails-logging"
    compile "org.grails:grails-plugin-rest"
    compile "org.grails:grails-plugin-databinding"
    compile "org.grails:grails-plugin-i18n"
    compile "org.grails:grails-plugin-services"
    compile "org.grails:grails-plugin-url-mappings"
    compile "org.grails:grails-plugin-interceptors"

    compile "org.grails.plugins:gsp"
    compile "org.grails.plugins:async"
    compile "org.grails.plugins:events"

    compile "org.grails.plugins:hibernate5"
    compile "org.hibernate:hibernate-core:5.1.5.Final"
    compile "org.hibernate:hibernate-ehcache:5.1.5.Final"

    console "org.grails:grails-console"
    profile "org.grails.profiles:web"

    compile "mysql:mysql-connector-java:5.1.42"
    runtime "org.apache.tomcat:tomcat-jdbc"

    runtime "com.h2database:h2"

    if (!inlineHoist) {
        // Include Hoist as versioned external dependency when building a WAR for release
        compile "io.xh:hoist-core:$hoistCoreVersion"
    }
}

if (inlineHoist) {
    // Include Hoist as an inline plugin in multi-project mode when running in development
    grails {
        plugins {
            compile project(":hoist-core")
        }
    }
}

apply plugin:"maven-publish"
publishing {
    publications {
        appWar(MavenPublication) {
            from components.java
            artifact war

            repositories {
                maven {
                    if (version.endsWith("-SNAPSHOT")) {
                        url "https://repo.xh.io/content/repositories/snapshots/"
                    } else {
                        url "https://repo.xh.io/content/repositories/releases/"
                    }
                    credentials {
                        username xhRepoDeployUser
                        password xhRepoDeployPassword
                    }
                }
            }
        }
    }
}

bootRun {
    systemProperties = System.properties
    jvmArgs = ["-Xmx6G", "-Xms1G"]
    addResources = true
}


//----------------------------
// Custom Tasks
//----------------------------
task publishApp(dependsOn: "publishAppWarPublicationToMavenRepository") {
    group 'xhio'
    description 'Publishes an app build to ExHI maven repo.'

    doLast {
        println "$name $version published to repo.xh.io!"
    }
}
